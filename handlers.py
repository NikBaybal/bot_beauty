import texts
from keyboards import *
from functions import *
from aiogram import F,Router
from aiogram.filters import CommandStart
from aiogram.types import CallbackQuery
from aiogram.types import Message

router = Router()

@router.message(CommandStart())
async def start(message: Message):
    await message.answer(f'‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @{message.from_user.username}!\n\n' + texts.start, reply_markup = start_kb)

@router.message(F.text =='‚ÑπÔ∏è –û –Ω–∞—Å')
async def about(message: Message):
    await message.answer_photo(img_answer('files/about.jpg'), texts.about_us, parse_mode = 'HTML', reply_markup = start_kb)

@router.message(F.text =='üìù –ü—Ä–µ–π—Å–∫—É—Ä–∞–Ω—Ç')
async def price(message):
    await message.answer_photo(img_answer('files/info.jpg'),'<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —É—Å–ª—É–≥—É</b>', parse_mode = 'HTML', reply_markup = catalog_kb)

@router.callback_query(F.data=='–ú–∞–Ω–∏–∫—é—Ä')
async def manikur(callback:CallbackQuery):
    await callback.message.edit_media(img('files/manikur.jpg',texts.manikur), reply_markup = buy_kb)
    await callback.answer()

@router.callback_query(F.data=='–ü–µ–¥–∏–∫—é—Ä')
async def pedikur(callback:CallbackQuery):
    await callback.message.edit_media(img('files/pedikur.jpg',texts.pedikur),parse_mode='HTML',reply_markup=buy_kb)
    await callback.answer()

@router.callback_query(F.data=='–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ')
async def pedikur(callback:CallbackQuery):
    await callback.message.edit_media(img('files/narast.png',texts.narast),parse_mode='HTML',reply_markup=buy_kb)
    await callback.answer()

@router.callback_query(F.data=='–î—Ä—É–≥–æ–µ')
async def pedikur(callback:CallbackQuery):
    await callback.message.edit_media(img('files/other.png',texts.other),parse_mode='HTML',reply_markup=buy_kb)
    await callback.answer()

@router.callback_query(F.data=='back_to_preiskurant')
async def back(callback:CallbackQuery):
    await callback.message.edit_media(img('files/info.jpg','<b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —É—Å–ª—É–≥—É</b>'), reply_markup = catalog_kb)
    await callback.answer()